AWSTemplateFormatVersion: "2010-09-09"
Description: AWS Cloud Template to create resources required to deploy Some Application. For our small db application we will be needing AWS Lightsail container, S3 and RDS DB Services.

Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      websiteendpoint: s3-website-sa-east-1.amazonaws.com

Parameters:
  DBPassword:
    Type: String
    Description: Password for the DB admin account.
    Default: Password123
  RootDomainName:
    Description: Domain name for your website (example.com)
    Type: String
    Default: totalarmybuilder.com

Resources:
  Database:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBInstanceIdentifier: totalarmybuilder
      DBInstanceClass: db.t2.micro
      AllocatedStorage: 20
      PubliclyAccessible: true
      Engine: postgres
      EngineVersion: "12.9"
      MasterUsername: postgres
      MasterUserPassword: !Ref DBPassword

  APIContainer:
    Type: AWS::Lightsail::Container
    Properties:
      IsDisabled: false
      Power: micro
      Scale: 1
      ServiceName: totalarmybuilder-api-container

  RootBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RootDomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  WWWBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - www.${Domain}
        - Domain: !Ref RootDomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref RootBucket

Outputs:
  WebsiteURL:
    Value: !GetAtt RootBucket.WebsiteURL
    Description: URL for website hosted on S3
